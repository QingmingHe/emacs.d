#+TITLE: Starter Kit Fortran
#+OPTIONS: toc:nil num:nil ^:nil

* Starter Kit Fortran

Fortran is a major language for scientific computation but a minor for other.

** Fortran interface

Interfaces are heavily used since Fortran 90 and Emacs provide a minor mode
for browsing these interfaces easily.

#+BEGIN_SRC emacs-lisp
(require 'f90-interface-browser)
#+END_SRC

** Display function data
TODO
use *display-message-or-buffer*.
** Fortran hooks

#+BEGIN_SRC emacs-lisp
(add-hook 'f90-mode-hook '(lambda ()
                               (flyspell-prog-mode)
                               (yas-minor-mode)
                               (flycheck-mode)
                               (outline-minor-mode)
                               (setq outline-regexp " *\\(function \\|subroutine \\|type[, ]\\|module \\|interface \\|program \\|recursive \\)")
                               (auto-fill-mode)
                               (project-minor-mode)
                               (modify-syntax-entry ?_ "w")
                          ))
#+END_SRC

** Fortran indent
   
Default indentation for Fortran is not that friendly.
#+BEGIN_SRC emacs-lisp
(setq fortran-do-indent 2)
(setq fortran-if-indent 2)
(setq fortran-structure-indent 2)
(setq fortran-continuation-indent 2)
(setq f90-do-indent 2)
(setq f90-if-indent 2)
(setq f90-structure-indent 2)
(setq f90-continuation-indent 2)
(setq f90-type-indent 2)
#+END_SRC

** Declaration align
   
Align variable declaration. Key binding is *C-c C-i*.

#+BEGIN_SRC emacs-lisp
(defun my-f90-align-declare ()
  "Align declaration of Fortran variables. The declaration before align
should have \"::\" and \"!\". Declaration like these are valid:

integer :: i ! an integer
type(SomeType) :: atype ! object of SomeType"
  (interactive)
  (let ((begin (region-beginning))
        (end (region-end)))
    (indent-region begin end)
    (align-regexp begin end "\\(\\s-*\\)::" 1 1 nil)
    (align-regexp begin end "::\\(\\s-*\\)" 1 1 nil)
    (align-regexp begin end "\\(\\s-*\\)!" 1 1 nil)))
(define-key f90-mode-map (kbd "C-c C-i") 'my-f90-align-declare)
#+END_SRC

** Use \-J to join lines in Fortran style
#+BEGIN_SRC emacs-lisp
(evil-leader/set-key-for-mode 'f90-mode
  "J" '(lambda ()
         (interactive)
         (f90-join-lines t)))
#+END_SRC

