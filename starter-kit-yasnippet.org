#+TITLE: Starter Kit Yasnippet
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Yasnippet
[[http://code.google.com/p/yasnippet/][yasnippet]] is yet another snippet expansion system for Emacs.  It is
inspired by TextMate's templating syntax.
- watch the [[http://www.youtube.com/watch?v=vOj7btx3ATg][video on YouTube]]
- see the [[http://yasnippet.googlecode.com/svn/trunk/doc/index.html][intro and tutorial]]

** yas everywhere
#+BEGIN_SRC emacs-lisp
;; Only use snippets distributed with the Starter Kit
(setq yas-snippet-dirs (expand-file-name "snippets" starter-kit-dir))
;; Auto indentation is too slow
(setq yas-indent-line 'fixed)
;; Don't re-activate snippet fields after undo/redo
(setq yas-snippet-revival nil)
;; disable tab for `yas-minor-mode' and `yas-keymap' for each mode has its
;; own tab
(with-eval-after-load 'yasnippet
  (define-key yas-minor-mode-map (kbd "<tab>") nil)
  (define-key yas-minor-mode-map (kbd "TAB") nil)
  (define-key yas-keymap [(tab)] nil)
  (define-key yas-keymap (kbd "TAB") nil))
(yas-global-mode 1)
#+END_SRC

** Snippet mode
*** Snippet for snippet

The original snippet for snippet is too long too ugly. What I want are only
=name= and =key= directives.
#+begin_src emacs-lisp
(setq yas-new-snippet-default "\
# -*- coding: utf-8; mode: snippet; require-final-newline: nil -*-
# name: $1
# key: ${2:$1}
# --
$0")
#+end_src

*** Tab for snippet mode

#+begin_src emacs-lisp
(defun snippet-mode-setup ()
  (define-key yas-keymap (read-kbd-macro "TAB") 'yas-next-field))
(with-eval-after-load 'yasnippet
  (add-hook 'snippet-mode-hook 'snippet-mode-setup))
#+end_src

** Configure Yasnippets for Org Mode
   :PROPERTIES:
   :CUSTOM_ID: org-mode
   :END:

The latest version of yasnippets doesn't play well with Org-mode, the
following function allows these two to play nicely together.
#+begin_src emacs-lisp
(defun yas/org-expand-or-next-field ()
  (let ((yas-fallback-behavior 'return-nil))
    (cond ((and
            (not (evil-normal-state-p))
            (not (org-at-heading-p))
            (yas-expand)))
          ((yas--snippets-at-point)
           (yas-next-field)
           t))))

(defun yas/org-setup ()
  ;; yasnippet (using the new org-cycle hooks)
  (add-to-list 'org-tab-first-hook 'yas/org-expand-or-next-field))

(add-hook 'org-mode-hook #'yas/org-setup)
#+end_src

** Use popup
#+begin_src emacs-lisp
(defun yas-popup-isearch-prompt (prompt choices &optional display-fn)
  (popup-menu*
   (mapcar
    (lambda (choice)
      (popup-make-item
       (or (and display-fn (funcall display-fn choice))
           choice)
       :value choice))
    choices)
   :prompt prompt
   ;; start isearch mode immediately
   :isearch t))

(setq yas-prompt-functions
      '(yas-popup-isearch-prompt
        yas-no-prompt))
#+end_src
