#+TITLE: Starter Kit Flycheck
#+OPTIONS: toc:nil num:nil ^:nil

* Starter Kit Flycheck

Don't always check buffer, it's too slow.
#+BEGIN_SRC emacs-lisp
(setq flycheck-check-syntax-automatically '(mode-enabled save))
#+END_SRC

** Fortran

You may work on a large project and has complex dependencies, where module
files may locate here and there. In these cases, gfortran can't find these
module files and flycheck will always prompt errors like *No such file or
directory*. The solution is to add a *.dir-locals.el* at current path and add
codes:
#+BEGIN_SRC emacs-lisp :tangle no
((f90-mode . ((flycheck-gfortran-include-path . ("path0" "other/path")))))
#+END_SRC

The built in fortran-gfortran doesn't support Chinese errors and warnings. An
=flycheck-fortran-gfortran-zh= plugin is used. Note that flycheck checker and
options should be set before enabling flycheck or it will check syntax with
default checker and options at flycheck mode being enabled.

#+BEGIN_SRC emacs-lisp
(defun my-flycheck-fortran-setup ()
  (when (and
         (executable-find "gfortran")
         (buffer-file-name)
         (not (file-remote-p (buffer-file-name))))
    (setq flycheck-gfortran-language-standard "f2008")
    (flycheck-select-checker 'fortran-gfortran-zh)
    (flycheck-mode)))
(eval-after-load "f90"
  `(progn
     (require 'flycheck)
     (require 'flycheck-fortran-gfortran-zh)
     (add-hook 'f90-mode-hook 'my-flycheck-fortran-setup)))
#+END_SRC

** Python

Select checker for that flake8 is not always available.
#+BEGIN_SRC emacs-lisp
(defun my-flycheck-python-setup ()
  (when (and
         (buffer-file-name)
         (not (file-remote-p (buffer-file-name)))
         (equal 'python-mode major-mode)
         (not
          (member (file-name-nondirectory (buffer-file-name))
                  '("SConstruct" "SConscript"))))
    (if (executable-find "flake8")
        (flycheck-select-checker 'python-flake8)
      (flycheck-select-checker 'python-pycompile))
    (flycheck-mode)))

(eval-after-load "python"
  `(progn
     (require 'flycheck)
     (add-hook 'python-mode-hook 'my-flycheck-python-setup)))
#+END_SRC

You can install flake8 with its dependencies without direct Internet
connection this way:
1. Download flake8 and its packages *pip install flake8
   --download=/path/to/download*.
2. Move all the packages where you want.
3. Install the packages in a dependent sequence *pip install /path/to/package*.

** C
+ Clang is very good at auto completion but doesn't support OpenMP as well as
  GCC.
+ Clang always can't find the default include paths. Maybe the author is not
  familiar with Clang.
+ Use GCC as the default checker.
#+begin_src emacs-lisp
(defun my-flycheck-c-setup ()
  (when (and
         (executable-find "gcc")
         (buffer-file-name)
         (not (file-remote-p (buffer-file-name))))
    (progn
      (flycheck-select-checker 'c/c++-gcc)
      (flycheck-mode))))
(eval-after-load "cc-mode"
  `(progn
     (require 'flycheck)
     (add-hook 'c-mode-hook 'my-flycheck-c-setup)
     (add-hook 'c++-mode-hook 'my-flycheck-c-setup)))
#+end_src
