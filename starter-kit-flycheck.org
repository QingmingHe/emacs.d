#+TITLE: Starter Kit Flycheck
#+OPTIONS: toc:nil num:nil ^:nil

* Starter Kit Flycheck
  
Don't always check buffer, it's too slow.
#+BEGIN_SRC emacs-lisp
(setq flycheck-check-syntax-automatically '(save mode-enabled))
#+END_SRC

** Fortran
   
You may work on a large project and has complex dependencies, where module
files may locate here and there. In these cases, gfortran can't find these
module files and flycheck will always prompt errors like *No such file or
directory*. The solution is to add a *.dir-locals.el* at current path and add
codes:
#+BEGIN_SRC emacs-lisp :tangle no
((f90-mode . ((flycheck-gfortran-include-path . ("path0" "other/path")))))
#+END_SRC

The built in fortran-gfortran doesn't support Chinese errors and
warnings. An =flycheck-fortran-gfortran-zh= plugin is used.

#+BEGIN_SRC emacs-lisp
(add-hook 'f90-mode-hook #'(lambda ()
                             (flycheck-select-checker 'fortran-gfortran-zh)))
#+END_SRC


** Python

Select checker for that flake8 is not always available.
#+BEGIN_SRC emacs-lisp
(defun select-python-checker ()
  (when (equal 'python-mode major-mode)
    (if (executable-find "flake8")
        (flycheck-select-checker 'python-flake8)
      (flycheck-select-checker 'python-pycompile))))

(add-hook 'python-mode-hook #'(lambda ()
                                (select-python-checker)))
#+END_SRC

You can install flake8 with its dependencies without direct Internet
connection this way:
1. Download flake8 and its packages *pip install flake8
   --download=/path/to/download*.
2. Move all the packages where you want.
3. Install the packages in a dependent sequence *pip install /path/to/package*.
