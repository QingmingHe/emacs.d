#+TITLE: Emacs Starter Evil
#+OPTIONS: toc:2 num:nil ^:nil

* Starter Kit Evil

Evil is an evil mode to imitate Vim in Emacs. Starter Kit will set global evil
mode if starter-kit-evil is activated.

** Evil leader

#+BEGIN_QUOTE
Evil Leader provides the /leader/ feature from Vim that provides an easy way
to bind keys under a variable prefix key. For an experienced Emacs User it is
nothing more than a convoluted key map, but for a Evil user coming from Vim it
means an easier start. The default escape is *\*.
#+END_QUOTE
 
You should enable global-evil-leader-mode before you enable evil-mode,
otherwise evil-leader won't be enabled in initial buffers (*scratch*,
*Messages*, ...)
#+BEGIN_SRC emacs-lisp
(require 'evil-leader)
(global-evil-leader-mode)
#+END_SRC

** Evil mode

Set evil mode globally for that the author is a severe Vim user for the past
several years.
#+BEGIN_SRC emacs-lisp
(require 'evil)
(evil-mode 1)
(require 'project)
#+END_SRC

** Evil matchit
   
Evil matchit enables powerful *%* jump. Sometimes evil-matchit blocks, just
key in *C-g* to cancel jump.
#+BEGIN_SRC emacs-lisp 
(require 'evil-matchit)
(global-evil-matchit-mode 1)
;; (plist-put evilmi-plugins 'f90-mode '((evilmi-f90-get-tag evilmi-f90-jump)))
#+END_SRC

** Go to change

It is so happy to key in *g;* to go to last change and g, to com back.
#+BEGIN_SRC emacs-lisp
(require 'goto-chg)
#+END_SRC

** Surround
This package emulates surround.vim by Tim Pope. The functionality is wrapped
into a minor mode.

#+BEGIN_SRC emacs-lisp
(require 'surround)
#+END_SRC

To activate it, *M-x surround-mode*.

*** Add surrounding

You can surround in visual-state with s<textobject><trigger> or in
normal-state with ys<textobject><trigger>.

*** Change surrounding

You can change a surrounding with cs<old-trigger><new-trigger>.

*** Delete surrounding

You can delete a surrounding with ds<trigger>.

** Set Vim like Key Bindings

#+BEGIN_SRC emacs-lisp
;; global key bindings
(evil-leader/set-key
  "zo" 'show-entry
  "zO" 'show-all
  "zc" 'hide-entry
  "zC" 'hide-body
  "ln" 'linum-mode
  "me" 'multi-eshell
  "mn" 'multi-eshell-switch
  "ta" '(lambda ()
          (interactive)
          (if prj/use-gtags
              (helm-gtags-select)
            (etags-select-find)))
  "at" '(lambda ()
          (interactive)
          (if prj/use-gtags
              (helm-gtags-pop-stack)
            (pop-tag-mark)))
  "mt" 'prj/generate-tags
  "vt" '(lambda ()
          (interactive)
          (unless prj/use-gtags
            (etu/visit-tags-table)))
  "tl" 'helm-semantic-or-imenu
  "ne" 'flycheck-next-error
 )
#+END_SRC
   
** Ace jump

Just press =SPC=, the first character of word where you want to go and select
the pop up character. You can fly in current frame.
#+BEGIN_SRC emacs-lisp 
(require 'ace-jump-mode)
(define-key evil-normal-state-map (kbd "SPC") 'ace-jump-mode)
(setq ace-jump-mode-scope 'frame)
#+END_SRC

** Disable evil for some modes
#+BEGIN_SRC emacs-lisp
(add-to-list 'evil-emacs-state-modes 'taglist-mode)
#+END_SRC

