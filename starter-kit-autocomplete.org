#+TITLE: Emacs Starter Auto Complete
#+OPTIONS: toc:2 num:nil ^:nil

* Starter Kit AC

** Basic setup
#+BEGIN_SRC emacs-lisp
;; enable ac-gtags in several modes
(mapcar
 (lambda (mode)
   (add-to-list 'ac-gtags-modes mode))
 '(f90-mode python-mode))

;; add several modes to ac-modes so that global-auto-complete-mode can run on
;; these modes
(mapcar
 (lambda (mode)
   (add-to-list 'ac-modes mode))
 '(org-mode text-mode))

;; ac-sources for different languages
(setq-default
 ac-sources
 '(ac-source-abbrev
   ac-source-dictionary
   ac-source-words-in-buffer
   ac-source-filename))
(add-hook 'f90-mode-hook
          (lambda ()
            (setq ac-sources
                  (append
                   '(ac-source-gtags
                     ac-source-etags)
                   ac-sources))))
(add-hook 'python-mode-hook
          (lambda ()
            (setq ac-sources
                  (append
                   '(ac-source-gtags
                     ac-source-etags)
                   ac-sources))))
(add-hook 'c-mode-common-hook
          (lambda ()
            (setq ac-sources
                  (append
                   '(ac-source-gtags
                     ac-source-etags)
                   ac-sources))
            (when (executable-find "clang")
              (add-to-list 'ac-sources 'ac-source-clang))))
(add-hook 'emacs-lisp-mode-hook
          (lambda ()
            (setq ac-sources
                  (append
                   '(ac-source-features
                     ac-source-functions
                     ac-source-variables
                     ac-source-symbols)
                   ac-sources))))
(add-hook 'eshell-mode-hook
          (lambda ()
            (setq ac-sources '(ac-source-pcomplete))))

;; enable auto complete in all modes
(global-auto-complete-mode t)

(setq ac-use-menu-map t)
(setq ac-use-quick-help t)
(setq ac-dwim t)
;; use TAB to trigger completion
(setq ac-auto-start nil)
(ac-set-trigger-key "TAB")
;; use pos-tip instead of popup to show doc perfectly
(unless *terminal*
  (setq ac-quick-help-prefer-pos-tip t))

;; Don't use fuzzy complete.
;; (require 'fuzzy)
;; (setq ac-fuzzy-enable t)

;;; Key bindings
(define-key ac-mode-map (kbd "M-n") 'auto-complete)
#+END_SRC

** Set up for Backends
*** Clang for C and C++
Add include path, which can be obtained by *echo "" | g++ -v -x c++ -E -*, to
ac-clang backend.
#+BEGIN_SRC emacs-lisp
(defun add-ac-clang-include-flags-pkgs (&rest pkgs)
  "Add c include flags to ac-clang-flags for given pkgs."
  (make-local-variable 'ac-clang-flags)
  (mapc
   (lambda (inc)
     (add-to-list 'ac-clang-flags (concat "-I" inc)))
   (get-c-include-paths-pkgs pkgs))
  ac-clang-flags)

(setq ac-clang-flags
      (mapcar (lambda (item) (concat "-I" item))
              (get-c-include-paths-general)))
#+END_SRC
